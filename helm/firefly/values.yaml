# Default values for firefly Helm chart
# This file contains public configuration values
# For secrets, use values.local.yaml (gitignored)

# Global settings
globalLabels:
  app.kubernetes.io/name: firefly
  app.kubernetes.io/version: latest
hostNetwork: true

# Drachtio SIP server configuration
drachtioImageRepository: drachtio/drachtio-server
drachtioImageTag: "0.9.3"
drachtioImagePullPolicy: IfNotPresent
drachtioHost: localhost
drachtioPort: 9022
drachtioSipPort: 5062
drachtioSecret: ""  # Set in values.local.yaml
drachtioLogLevel: info

# Homer SIP capture (optional)
homerEnabled: true
homerHost: "127.0.0.1"
homerPort: 9060
homerId: "10"

# Drachtio resource limits
drachtioResourcesRequestsMemory: "128Mi"
drachtioResourcesRequestsCpu: "100m"
drachtioResourcesLimitsMemory: "256Mi"
drachtioResourcesLimitsCpu: "200m"

# Firefly application configuration
fireflyImageRepository: firefly
fireflyImageTag: latest
fireflyImagePullPolicy: IfNotPresent
fireflyMode: chat

# Firefly resource limits
fireflyResourcesRequestsMemory: "256Mi"
fireflyResourcesRequestsCpu: "250m"
fireflyResourcesLimitsMemory: "512Mi"
fireflyResourcesLimitsCpu: "500m"

# Firefly health checks
healthCheckEnabled: true
healthCheckDrachtioPort: 9022
healthCheckInitialDelaySeconds: 30
healthCheckPeriodSeconds: 10
healthCheckTimeoutSeconds: 5

# SIP configuration
sipProvider: direct  # Options: direct, kyivstar, freeswitch
sipDomain: localhost
sipUsername: firefly
sipPort: 5062
sipPassword: ""  # Set in values.local.yaml

# RTP media configuration
rtpPortMin: 10000
rtpPortMax: 10100
rtpJitterBufferMs: 60

# Call recording configuration
recordingEnabled: true
recordingPath: /app/recordings

# Persistent volume for recordings
persistenceEnabled: true
persistenceStorageClass: ""
persistenceAccessMode: ReadWriteOnce
persistenceSize: 5Gi

# Transcription configuration
transcriptionEnabled: true
transcriptionModel: gpt-4o-mini-transcribe
transcriptionDisplayToConsole: true

# Audio configuration
audioTestTempo: 1.0
audioAiTempo: 1.0

# Network configuration
localIp: "127.0.0.1"

# OpenAI configuration
openaiApiKey: ""  # Set in values.local.yaml

# Service configuration
drachtioServiceType: ClusterIP
drachtioServiceClusterIP: None  # Headless service for StatefulSet

# Generic environment variables - allows passing any env vars from .envrc
# Usage: env.SOME_VAR: "value" gets mapped to SOME_VAR environment variable
env:
  NODE_ENV: development
  LOG_LEVEL: debug